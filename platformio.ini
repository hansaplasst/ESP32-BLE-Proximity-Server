; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[env:wemos_d1_mini32]   ; esp32-s3-devkitc-1-n16r8v <===> esp32-s3-devkitc-1 (N8R8) <===> wemos_d1_mini32
platform = espressif32
board = wemos_d1_mini32 ; esp32-s3-devkitc-1-n16r8v <===> esp32-s3-devkitc-1 (N8R8) <===> wemos_d1_mini32
framework = arduino
monitor_speed = 115200
upload_speed = 921600 

lib_deps = 
  ArduinoJson
  T-vK/ESP32 BLE Keyboard
  https://github.com/hansaplasst/dprintf.git
  https://github.com/hansaplasst/ESPResetUtil.git

board_build.filesystem = littlefs
board_erase.flash = false                   ; Keeps device bonding persistent after reboot
; board_build.partitions = min_spiffs.csv   ; Increase the SPIFFS size to 1MB
; board_build.arduino.memory_type = qio_opi ; N8R8
; board_build.flash_mode = qio              ; N8R8
; board_build.psram_type = opi              ; N8R8
; board_upload.flash_size = 8MB             ; N8R8
; board_upload.maximum_size = 8388608       ; N8R8
; board_build.extra_flags = 
;   -DBOARD_HAS_PSRAM                       ; N8R8


build_flags =
  -DBAUDRATE=115200
  -DDEV_NAME="\"BLE Proximity Server wemos\""
  -DDEBUG_LEVEL=1 ; Configure DPRINTF debug level here. VERBOSE 0, INFO 1, WARNING 2, ERROR 3
  ; -DCORE_DEBUG_LEVEL=3  ; Enable info(3), debug(4), verbose(5)  messages in the (ESP32) core. Add `Serial.setDebugOutput(true)` to your setup() function.
  
monitor_raw = yes ; Enable raw coloured monitor output, useful for debugging